rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la colección de usuarios
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update: if request.auth != null && (
        request.auth.uid == userId ||
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['followers', 'followersCount']) && request.auth != null)
      );
    }

    // Reglas para la colección de libros
    match /books/{bookId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (resource.data.ownerId == request.auth.uid || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views']));
    }

    // Reglas para la colección de entradas del foro
    match /forumEntries/{entryId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.bookOwnerId);
    }

    // Reglas para la colección de chats y subcolección de mensajes
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      match /messages/{messageId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
      }
    }

    // Reglas para la colección de notificaciones
    match /notifications/{notificationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.uid == resource.data.recipientId;
      allow update: if request.auth != null && request.auth.uid == resource.data.recipientId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
    }
  }
}